#!/bin/bash
#
# Enable/Disable User account for mydlink service
#
# Writed by Linda Hu <linda.hu@dlinkcorp.com>
#
# 2016/09/13 Initial Version
#

# Source function library
if [ -f /etc/rc.d/init.d/functions ]; then
. /etc/rc.d/init.d/functions
elif [ -f /etc/init.d/functions ]; then
. /etc/init.d/functions
elif [ -f /etc/rc.d/functions ]; then
. /etc/rc.d/functions
else
# Log that something succeeded
success() {
  [ "$BOOTUP" != "verbose" -a -z "${LSB:-}" ] && echo_success
  return 0
}
# Log that something failed
failure() {
  local rc=$?
  [ "$BOOTUP" != "verbose" -a -z "${LSB:-}" ] && echo_failure
  [ -x /bin/plymouth ] && /bin/plymouth --details
  return $rc
}
echo_success() {
  [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
  echo -n "["
  [ "$BOOTUP" = "color" ] && $SETCOLOR_SUCCESS
  echo -n $"  OK  "
  [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
  echo -n "]"
  echo -ne "\r"
  return 0
}
echo_failure() {
  [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
  echo -n "["
  [ "$BOOTUP" = "color" ] && $SETCOLOR_FAILURE
  echo -n $"FAILED"
  [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
  echo -n "]"
  echo -ne "\r"
  return 1
}
fi

USER={{ userid }}
NOLOGINSHELL={{ nologin }}
HOSTNAME=`/bin/hostname -s`
COUNT=`grep -c $USER /etc/sudoers`
COUNTROOT=`grep $USER /etc/sudoers | grep root | grep -c ALL`
SUDOFILE="/etc/sudoers.d/$USER"
if [ ! -e $SUDOFILE ]
then
  PRECOUNT=0
else
  PRECOUNT=`grep -c $USER /etc/sudoers.d/$USER`
fi
STATUS=`grep $USER /etc/passwd|grep -c bash`
RETVAL=0
# See how we were called.
case "$1" in
  start)
        # Start daemons.
        echo -n "Enabling $USER account: "
	if [ $COUNT -eq 0 ] && [ $PRECOUNT -eq 0 ]
	then
  	  echo -e "$USER\t\tALL=(root)\tREADONLY" >> /etc/sudoers
	fi
	sed -i "/$USER/{s|${NOLOGINSHELL}|/bin/bash|}" /etc/passwd
	echo `/bin/date +"%FT%T%z"` `/bin/hostname -s` PERMISSION: $SUDO_USER: Enable permission - READONLY for $USER >> /var/log/secure
	if [ $? -eq 0 ]
	then
	   	success
	else
	   	failure
        	RETVAL=$?
	fi
        echo
        ;;

  startroot)
    # Start daemons for not MP site
    if [[ $HOSTNAME =~ '^mp-' ]]; then
        echo -n "Enabling $USER account for root (NOT allow in MP site): "
        failure
        RETVAL=1
    else
        echo -n "Enabling $USER account for root privileges: "
	if [ $COUNTROOT -eq 0 ]
	then
  	        echo -e "$USER\t\tALL=(root)\tALL" >> /etc/sudoers
         	echo `/bin/date +"%FT%T%z"` `/bin/hostname -s` PERMISSION: $SUDO_USER: Enable permission - ROOT for $USER >> /var/log/secure
        fi
	sed -i "/$USER/{s|${NOLOGINSHELL}|/bin/bash|}" /etc/passwd
	if [ $? -eq 0 ]
	then
	       success
	else
		failure
        	RETVAL=$?
	fi
    fi
    echo
    ;;

  stop)
    NOLOGINCOUNT=`grep "^${USER}:" /etc/passwd | grep -c 'nologin'`
    # Stop daemons.
    echo -n "Disabling $USER account: "
	sed -i "/^$USER/d" /etc/sudoers
	sed -i "/$USER/{s|/bin/bash|${NOLOGINSHELL}|}" /etc/passwd
	if [ $? -eq 0 ]
	then
        if [ $NOLOGINCOUNT  -eq 0 ]
        then
            echo `/bin/date +"%FT%T%z"` `/bin/hostname -s` PERMISSION: $SUDO_USER: Disable permission for $USER >> /var/log/secure
        fi
	   	success
	else
	   	failure
        	RETVAL=$?
	fi
        echo
        ;;
  status)
	if [ $STATUS -eq 1 ] && [ $COUNTROOT -eq 1 ]
	then
          echo -n "$USER is enabled with root  "
	elif [ $STATUS -eq 1 ]
	then
          echo -n "$USER is enabled  "
	elif [ $STATUS -gt 1 ]
	then
          echo -n "$USER is enabled [$STATUS] "
	else
          echo -n "$USER is disabled "
          RETVAL=3
	fi
	echo
	;;
  *)
        echo "Usage: enableTWRD {start|stop|status}"
        RETVAL=2
esac

exit $RETVAL

